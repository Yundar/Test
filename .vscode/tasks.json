// https://code.visualstudio.com/docs/editor/tasks
{
    "version": "2.0.0",
    "tasks": [{
        "label": "Compile", // имя задачи, соответствующее preLaunchTask в launch.json
                 "command": "g++", // Используемый компилятор, C ++ использует g ++
        "args": [
            "${file}",
                         "-o", // Укажите имя выходного файла, если этот параметр не добавлен, по умолчанию выводится a.exe, по умолчанию a.out под Linux
            "E:\\TTS\\GameDev\\Test/${fileBasenameNoExtension}.exe",
                        "-I", "E:\\TTS\\GameDev\\Test\\include",
                         "-g", // Создание и отладка связанной информации
                         "E:\\TTS\\GameDev\\Test\\src\\Board.cpp",
                         "E:\\TTS\\GameDev\\Test\\src\\Bot.cpp",
                         "E:\\TTS\\GameDev\\Test\\src\\Controller.cpp",
                         "E:\\TTS\\GameDev\\Test\\src\\Launcher.cpp",
                         "E:\\TTS\\GameDev\\Test\\src\\Player.cpp",
                         "E:\\TTS\\GameDev\\Test\\src\\View.cpp",
                         "E:\\TTS\\GameDev\\Test\\src\\Game.cpp",
                         "-Wall", // Включить дополнительные предупреждения
                         "-static-libgcc", // статическая ссылка libgcc, обычно добавляется
                         "-fexec-charset=GBK", // Сгенерированная программа использует кодировку GBK, не добавление этой приведет к искажению вывода на китайском языке под Win
                         // "-std = c11", // Последний стандарт C ++ - c ++ 17, или измените его в соответствии с вашими потребностями
                 ], // Скомпилированная команда фактически эквивалентна VSC, помогая вам потерять эти вещи в терминале
                 "type": "process", // процесс заключается в том, что vsc передает все предопределенные переменные и экранирует непосредственно команду после синтаксического анализа; оболочка эквивалентна открытию оболочки и последующему вводу команды, поэтому аргументы будут анализироваться через оболочку
        "group": {
            "kind": "build",
                         "isDefault": true // ctrl shift B будет выбран вручную, если он неверен
        },
        "presentation": {
            "echo": true,
                         "раскрыть": "всегда", // Переходить ли к панели терминала при выполнении задачи, это может быть всегда, тихо, никогда. Подробную информацию см. В документации VSC.
                         "focus": false, // Установите значение true, чтобы сфокусироваться на терминале во время выполнения задачи, но для компиляции C / C ++ значение true не имеет значения
                         "panel": "shared" // Информация о компиляции разных файлов разделяет панель терминала
        },
                 // "problemMatcher": "$ gcc" // Эта опция может фиксировать сообщение об ошибке в терминале при компиляции; но из-за Lint могут возникнуть двойные ошибки при открытии этого
    }]
}